"""
Django settings for AiStore project.
Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path
from dotenv import load_dotenv
import os
import dj_database_url

# Load environment variables
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=BASE_DIR / '.env')

# ====================
# Core Django Settings
# ====================

SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "unsafe-secret-key")
# DEBUG = os.getenv("DJANGO_DEBUG", "False") == "True"
# ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "").split(",") if not DEBUG else ["*"]

DEBUG = True
ALLOWED_HOSTS = ["*"]


# ====================
# Installed Applications
# ====================

INSTALLED_APPS = [
    # Default Django apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Third-party apps
    "rest_framework",
    "corsheaders",
    "drf_spectacular",

    # Local apps
    "store",
    "authentication",
    "recommender",
]

# ====================
# Middleware
# ====================

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# ====================
# URL and WSGI Settings
# ====================

ROOT_URLCONF = "core.urls"
WSGI_APPLICATION = "core.wsgi.application"

# ====================
# Templates
# ====================

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ====================
# Database
# ====================

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DATABASE_ENGINE'),
        'NAME': os.getenv('DATABASE_NAME'),
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': os.getenv('DATABASE_HOST'),
        'PORT': os.getenv('DATABASE_PORT'),
    }
}

# ====================
# Authentication
# ====================

AUTH_USER_MODEL = "authentication.User"

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ====================
# Localization
# ====================

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ====================
# Static and Media Files
# ====================

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# ====================
# Security Settings
# ====================

# Security settings
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 31536000

# ====================
# Email Settings
# ====================

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", 587))
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")

# ====================
# Caching (Redis)
# ====================

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv("REDIS_URL", "redis://127.0.0.1:6379/0"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "aistore"
    }
}

# ====================
# DRF Settings
# ====================

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema"
}

# ====================
# GNN Recommender System Settings
# ====================

# Base and artifact directories
RECOMMENDER_ROOT = (BASE_DIR / "recommender" / "artifacts").resolve()
RECOMMENDER_ROOT.mkdir(parents=True, exist_ok=True)

# === Models ===
GNN_MODEL_PATH = RECOMMENDER_ROOT / "models" / "HeroGraphSAGE_model.pth"
PREDICTOR_MODEL_PATH = RECOMMENDER_ROOT / "models" / "Predictor_model.pth"

# === Mappings ===
MAPPING_USER_T0_ID_PATH = RECOMMENDER_ROOT / "mappings" / "user_to_id_mapping.json"
MAPPING_ITEM_ASIN_TO_ID_PATH = RECOMMENDER_ROOT / "mappings" / "item_asin_to_id_mapping.json"
MAPPIN_ID_TO_ASIN_ITEM_PATH = RECOMMENDER_ROOT / "mappings" / "id_to_item_asin_mapping.json"

# === Graphs ===
FULL_GRAPH_PATH = RECOMMENDER_ROOT / "data" / "graphs" / "graph_full.pt"
TRAIN_GRAPH_PATH = RECOMMENDER_ROOT / "data" / "graphs" / "graph_train.pt"
VAL_GRAPH_PATH = RECOMMENDER_ROOT / "data" / "graphs" / "graph_val.pt"
TEST_GRAPH_PATH = RECOMMENDER_ROOT / "data" / "graphs" / "graph_test.pt"

# === Encoders ===
USER_ENCODER_PATH = RECOMMENDER_ROOT / "encoders" / "user_encoder.pkl"
ITEM_ENCODER_PATH = RECOMMENDER_ROOT / "encoders" / "item_encoder.pkl"

# === Preprocessing ===
FEATURE_PREPROCESSOR_PATH = RECOMMENDER_ROOT / "preprocessor" / "item_feature_preprocessor.pkl"
FEATURE_SCALER_PATH = RECOMMENDER_ROOT / "scalers" / "feature_scaler.pkl"

# === Consolidated Model Paths ===
RECOMMENDER_MODELS = {
    "gnn": RECOMMENDER_ROOT / "models" / "HeroGraphSAGE_model.pth",
    "predictor": RECOMMENDER_ROOT / "models" / "Predictor_model.pth",
    "graph": RECOMMENDER_ROOT / "data" / "graphs" / "graph_full.pt",
    "item_map": RECOMMENDER_ROOT / "mappings" / "item_asin_to_id_mapping.json",
    "id_to_item": RECOMMENDER_ROOT / "mappings" / "id_to_item_asin_mapping.json"
}

# =====================
#  Default Field Type
# =====================

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
